@model myapp.Models.Shinbreaker

<h2>Edit Student Display</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h2>Student Information</h2>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(shinbreaker => shinbreaker.Rating, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-and-8">
                @Html.EditorFor(shinbreaker => shinbreaker.Rating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(shinbreaker => shinbreaker.Rating, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(shinbreaker => shinbreaker.FunnyLevel , htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-and-8">
                @Html.EditorFor(shinbreaker => shinbreaker.FunnyLevel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(shinbreaker => shinbreaker.FunnyLevel, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Joke, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-and-8">
                @Html.EditorFor(model => model.Joke, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Joke, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">
            <div class="col-md-offset-4 col-and-8">
                <input type="submit" value="Save" class="btn btn-danger" style="box-shadow:1px 1px black;" />

            </div>

        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Display")

</div>
@section Scripts {
    @Scripts.Render("-/bundles/jqueryval")
}

